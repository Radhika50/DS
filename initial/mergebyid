/*Example 1:

Input: nums1 = [[1,2],[2,3],[4,5]], nums2 = [[1,4],[3,2],[4,1]]
Output: [[1,6],[2,3],[3,2],[4,6]]
Explanation: The resulting array contains the following:
- id = 1, the value of this id is 2 + 4 = 6.
- id = 2, the value of this id is 3.
- id = 3, the value of this id is 2.
- id = 4, the value of this id is 5 + 1 = 6.*/

class Solution {
public:
    vector<vector<int>> mergeArrays(vector<vector<int>>& nums1, vector<vector<int>>& nums2) {
        int n1=nums1.size();
        int n2=nums2.size();
        int p1=0,p2=0;
        vector<vector<int>> res;
        while(p1<n1 && p2<n2){
            //ptr in outer vector, 0 is inner vector, check for ids
            if(nums1[p1][0]==nums2[p2][0]){
                res.push_back({nums1[p1][0],nums1[p1][1]+nums2[p2][1]});
                p1++;
                p2++;
            }
            //nums1 id is small
            else if(nums1[p1][0]<nums2[p2][0]){
                res.push_back({nums1[p1][0],nums1[p1][1]});
                p1++;
            }
            else{
                res.push_back(nums2[p2]);
                p2++;
            }
        }
        //remaining
        while(p1 < n1){
            res.push_back(nums1[p1]);
            p1++;
        }
        while(p2  < n2){
            res.push_back(nums2[p2]);
            p2++;
        }
        return res;
    }
};